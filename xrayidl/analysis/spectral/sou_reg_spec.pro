pro sou_reg_spec,regfile,hdr,mlist,tstart,mfname,bmlist=bmlist,smfname=smfname,asdim=asdim,wemin=wemin,wemax=wemax,factor=factor,ctonth=ctonth,linestyle=linestyle,thick=thick,color=color
;+
; generate spectra (including grouped one as well as rsp files) for a 
; set of sources with the on-source and background regions defined in 
; a single region file (generated by sou_fits_reg)
;
; regfile - region file name, created by sou_fits_reg, including
;           background annulus
; hdr - the header of the event file
; mlist - event list
; tstart - the reference time of the observation used for calculating
;          the arf
; mfname - name of the mask file, used for calculating the backscal
;          parameter
; bmlist - source-removed event list, useful for extracting background
;          spectra (if not given, bmlist=mlist)
; smfname - name of the mask file for bmlist, used for calculating the
;           background backscal parameter (If not given, smfname=mfname)
; asdim - dimension of the plot (def=200")
; wemin,wemax - lower and upper energy limits of the weight for the
;               rsp calculation
; factor - the magnification factor to be applied to the source and
;          annulus radii
; ctonth - background-subtracted signal-to-noise ratio used for
;          spectral grouping (used by sp_group). Def=2.5
; linestyle, thick, color - curve style, thickness, and color 
;*OUTPUTS:
; files of ungrouped and grouped spectra of each source, its local
; background spectrum, and rsp file
;
; written by wqd, June 18, 2007
;-
if N_params() eq 0 then begin
  print,'CALLING SEQUENCE - sou_reg_spec,regfile,hdr,mlist,tstart,mfname,bmlist=bmlist,smfname=smfname,asdim=asdim,wemin=wemin,wemax=wemax,factor=factor,ctonth=ctonth,linestyle=linestyle,thick=thick,color=color'
 return
endif
if n_elements(color) eq 0 then color=!d.n_colors-1
if n_elements(wemin) eq 0 then wemin=500
if n_elements(wemax) eq 0 then wemax=2000
if n_elements(ctonth) eq 0 then ctonth=2.5

crval=sxpar(hdr,'crval*')
if n_elements(bmlist) eq 0 then begin
        print,'Assuming no source in the background region??!!!'
        bmlist=mlist 
endif
if n_elements(smfname) eq 0 then begin
    smfname=mfname
    print,'no source subtracted mask file name is provided!'
    print,'Assuming the subtraction is not important for backscal_b!!'
endif 
;for visual inspection and get the field image header:
cor=[0.01,0.8,0.01,0.99]
if n_elements(asdim) eq 0 then asdim=[1,1]*200 
 ;dimension of the field of view in units of arcsec

openr,un,regfile,/get
while eof(un) eq 0 do begin
    read_reg,un,crval,nshape,sra,sdec,spara,factor=factor,sname=sname $
      ,texto=texto
    sou_cim,mlist,hdr,sra,sdec,asdim,1,detagname='',sn=sn,char=1.2,thick=2 $
      ,cor=cor,shdr=shdr,pcor=pcor,sxmin=sxmin,symin=symin,sdim=sdim
    plot_shape,spara,pcor,shdr,[sra,sdec],nshape=nshape,linestyle=linestyle $
      ,color=color,sel=sel,fill=fill,thick=thick,noplot=noplot
    ;get the mask with sources and backcal:
    cast,mfname,shdr,outa=filtero,/noint
    sfac=(sxpar(shdr,'cdelt2')*3600./!size_pixel/8192.)^2
    expt=avg(filtero(sel))
    backscal=total(filtero(sel))/expt*sfac ;for an ACIS spectrum
    ;now get the source spectrum:
    filter=filtero*0.
    filter(sel)=1.
    list_image,mlist,sxmin,symin,cb,sdim(0),sdim(1),block=1 $
      ,filter=filter,sel=selc
    sfroot=sname
    multi_spec,mlist(selc),sfroot,exp=expt,backscal=backscal,wemin=wemin $
      ,wemax=wemax,tstart=tstart,bspecfname=sfroot+'_b.pi'
    ;get a background backscal in an annulus:
    cast,smfname,shdr,outa=filtero,/noint
    filter=filtero*0.
    read_reg,un,crval,nshape,sra,sdec,spara,nsign,factor=factor,texto=texto
    plot_shape,spara,pcor,shdr,[sra,sdec],nshape=nshape,linestyle=linestyle $
      ,color=color,sel=sel,fill=fill,thick=thick,noplot=noplot
    filter(sel)=filtero(sel)
    backscal_b=total(filter)/expt*sfac
    ;get the background spectrum:
    list_image,bmlist,sxmin,symin,cb,sdim(0),sdim(1),block=1,filter=filter $
      ,sel=sel
    ;tv,bscale(cb,0,1)
    multi_spec,bmlist(sel),sfroot+'_b',exp=expt,backscal=backscal_b $
      ,wemin=wemin,wemax=wemax,tstart=tstart,/norsp
    ;group the spectrum
    sp_group,sfroot+'.pi',sfroot+'_b.pi',fout='group.grp',ctonth=ctonth
    spawn,'grppha '+sfroot+'.pi '+sfroot+'_g.pi '+'clobber=yes ' $
      +'"comm=group group.grp & show group & exit"'
if !debug eq 3 then stop
endwhile
free_lun,un
return
end
