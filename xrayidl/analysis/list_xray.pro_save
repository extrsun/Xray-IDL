pro list_xray,infile,list,emin=emin,emax=emax,ccd=ccd,ext=ext,row=row,tagin=tagin
;+
; construct an event structure from an event file
;
;*INPUTS:
; infile - event file name
;;
;*OUTPUTS:
; list - event list (structure)
;
;*Selected Inputs:
; emin, emax - lower and upper limits of event energy (eV)
; ccd - selected ccd ID numbers
; ext - extension of the event list in the file
; row - definition of the structure 
;	(def: row = {time:0.0D0,x:0L,y:0L,energy:0,ccd_id:0})
; tagin - needed if the tag names in the event file are different 
;	from those defined in row.
;
; re-written by wqd 12/18/2001
;-
if n_params() eq 0 then begin
print,'CALLING SEQUENCE --- list_xray,infile,list,emin=emin,emax=emax,ccd=ccd,ext=ext,row=row,tagin=tagin'
return
endif
if n_elements(row) eq 0 then $
	row = {time:0.0D0,x:0L,y:0L,energy:0,ccd_id:0} 
	;tag names used for chandra data
if n_elements(tagin) eq 0 then tagin=tag_names(row)
ntag=n_elements(tagin)
if N_elements(ext) eq 0 then ext=1
tab=readfits(infile,hdr,ext=ext,/sil)
nct=sxpar(hdr,'NAXIS2')
list = replicate(row,nct)

for k=0,ntag-1 do list.(k)=fits_get(hdr,tab,tagin(k))

if (n_elements(emin)+n_elements(emax)) ne 0 then begin
	if n_elements(emin) eq 0 then emin = min(piev)
	if n_elements(emax) eq 0 then emax = max(piev)
	piev=list.energy
	inde = where( (piev ge emin) and (piev le emax),nct )
	if nct eq 0 then stop,'No counts are found'
	list=list(inde)
endif

ccdno=n_elements(ccd)
if ccdno ne 0 then begin
	inde=where_tag(list,tag_name='ccd_id',values=ccd,nct)
	if nct eq 0 then stop,'No counts are found'
	list=list(inde)
endif
return
end
