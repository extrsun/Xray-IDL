pro sou_sdb_info,slist,rslist,dfac=dfac,sradius=sradius
;+
; Add source detection information in multiple bands
;
; slist, rslist - input selected and removed duplicate source structures
; dfac - the factor multiplied to the source error radius (def =1).
; sradius - systematic error (minimum radius) of the source positions
;	in units of arcsec. Set sradius=0 equivalent to no systematic error
;	if not given, the systematic error from the source list is used
; 
; writen by WQD, May 12, 2002
;-
if n_params() eq 0 then begin
print,'CALLING SEQUENCE - sou_sdb_info,slist,rslist,dfac=dfac,sradius=sradius'
return
endif
sou_struct_out,slist,text
sou_struct_out,rslist,rtext

get_serr,slist,srs,sradius=sradius,dfac=dfac
get_serr,rslist,rsrs,sradius=sradius,dfac=dfac

nsel=n_elements(text)
for k=0,nsel-1 do begin
	; now find all the duplicated sources associated with the unique one
	; The algorithm (rsrs, srs, dfac should be the exactly same as in 
	; sou_merge_fits
	seperr=srs(k)+rsrs
	trans_dist,slist(k).ra,slist(k).dec,rslist.ra,rslist.dec $
		,/deg,/das,ang=sep
	rseln= where((sep^2 lt seperr), nsrsel)  
	if nsrsel ne 0 then begin
	 print,text(k)
	 for n=0,nsrsel-1 do begin
	  slist(k).sdb=slist(k).sdb+', '+rslist(rseln(n)).sdb
	   print,'r ',rtext(rseln(n))
	   print,'sep, sqrt(seperr) = ',sep(rseln(n)), sqrt(seperr(rseln(n)))
	  print,slist(k).sdb
	 endfor
	endif
endfor
;if !debug eq 2 then stop
return
end
