pro get_bmap,cbo,tbo,tbso,cbm,cth=cth,fra=fra
;+
; produce a background map for the map source detection
;
; cbo,tbo,tbso - count, exposure, and source-removed exposure maps
; cbm - the output background map
; fra - if given, the images will be binned by this factor
; cth - count threshold (def = 10 per bin after the rebining)
;
; written by wqd, 6/25/2001
;-
if n_params() eq 0 then begin
print,'CALLING SEQUENCE - pro get_bmap,cbo,tbo,tbso,cbm,cth=cth,fra=fra'
return
endif

cb=cbo
tb=tbo
tbs=tbso
if n_elements(cth) eq 0 then cth=16.
if n_elements(fra) eq 0 then begin
	fra=sqrt(cth/avg(cb(where(tbs gt 0))))
	nind=fix(alog(fra)/alog(2.))+1
	fra=2^nind
endif
image_comp3,cb,tb,tbs,fra=1./fra 
print,'fra, average counts per bin = ',fra,avg(cb(where(tbs gt 0)))
;24
;the resultant cb should contain at least 10 cts for a meaningful median avg.
fb=imdiv(cb,tbs)
image_median,3,fb,1.e-10*tb,tbs,fm,lmin=2,binmin=9
;1.e-10*tb is a fake background image

;to avoid the artificial reduction of background values at the edges of the
; image during the expansion of the image, it is preferred to assign a relatively high values.  
;assign empty bins with the average of the lower 1/5 bins
fmv=fm(where(tbs gt 0.,nbin))
fmv=fmv(sort(fmv))
fm(where(tb le 0.))=avg(fmv(0:nbin/5))
cbm=image_comp(fm,fra)*(1./fra^2)*tbo
return
end
