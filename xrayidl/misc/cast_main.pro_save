pro cast_main,filelist,mhdr,mmap,fdir=fdir,ftail=ftail,mtype=mtype $
,offset=offset,nozero=nozero,avgkey=avgkey $
,slow=slow,soufile=soufile,instr=instr,subfac=subfac,psffile=psffile,eband=eband,mtoi=mtoi,bv=bv,nonorm=nonorm
;+
; merge images of a list of observations into a map
;
;*INPUTS:
; filelist - file list: each row contains a file name (or filehead so that
;		file name = filehead+ftail		
; mhdr - the header of the merged map, which can be produced with get_fitshead
;
;*OUTPUTS:
; mmap - merged image, which have the same type as the input image, 
; if avgkey is not set; othwerwise, type=1 (float).
;
;*OPTIONAL Inputs:
; fdir - file directory (def ='../xdata/')
; ftail - characters appended to the filenames in filelist (e.g., '.fit')
; mtype - if =1, the merged coordinates are assumed to be Galactic
; offset - if the reference pixel of inhead is not in FORTRAN formation,
;	offset needs to be set (e.g., (e.g., my old IDL format; 
;	1024 for xdim=2048; offset =0)
;	default=1 (FORTRAN format)
; avgkey - if = 1, average will be assigned to the output value, even for
;		integer input. (def: avgkey=1 for float or double input images
;		(type=4 or 5) 
; nozero - if =1, pixels with value=0 will not be casted (def =0)
; slow - the source signal-to-noise threshold for source subtraction
; soufile - source file name
; instr - instrument name (def = !instr)
; subfac - subtraction factor of the source energy-encircled radius as
;		defined in sou_det_params
; psffile = psf file name. Def = psffile from sou_det_params if eband is not
;		specified, otherwise use the bpsffile(eband-1)
; eband - energy band (1,2,3). If given bsffile is used
; mtoi - if set, use cast_r (mutiple pixels merged into one output bin)
;	otherwise use cast
; bv - vector containing band numbers (def =[1,2,3,4]
; nonorm - if set, no normalization of the input map (e.g., a
;          background map)
;*Example:
; casting 2 GC obs into a map in the Galactic coordinates:
; first define the fits header of the merged map: hh
; IDL> flist='flist.dat'
; IDL> $cat flist.dat
; acisf00945N002_evt2
; acisf00242N002_evt2
; IDL> cast_main,flist,hh,mmap,mtype=1,ftail='_i2.fits',fdir=''
;
; written by wqd 2/22/2001
;-
if n_params() eq 0 then begin
print,'CALL SEQUENCE - cast_main,filelist,mhdr,mmap,fdir=fdir,ftail=ftail'
print,',mtype=mtype,offset=offset,nozero=nozero,avgkey=avgkey'
print,',slow=slow,souf=soufile,instr=instr,subfac=subfac,psffile=psffile,eband=eband,bv=bv,nonorm=nonorm'
return
endif
if n_elements(mtype) eq 0 then mtype=0
if n_elements(fdir) eq 0 then fdir='../xdata/'
if n_elements(ftail) eq 0 then ftail=''
;-----
;sources for subtraction:
if n_elements(soufile) ne 0 then begin
	source_info,sn,sra,sdec,ston,cntr,slow=slow,souf=soufile,/deg,/deci
	;setup the source detection parameters:
	if n_elements(instr) eq 0 then instr=!instr
	sou_det_params,instr,dim,block,ccd,emin,emax,bmin,bmax $
		,dsfrac,asfrac,psffiled,bpsffile ;,ftail,aimoff,subfac
	if n_elements(psffile) eq 0 then begin
		if n_elements(eband) ne 0 then psffile=bpsffile(eband-1) $
		else psffile=psffiled
	endif

endif
;-------------
openr,un,filelist,/get
fname=''
append=0
while not eof(un) do begin
	readf,un,fname
    if keyword_set(nonorm) then begin
        inarr=readfits(fdir+fname+ftail+strtrim(bv(0),2)+'.fits',inhead)
    endif else begin
	evtfname=fdir+fname+'.fits' ;this event file has to be in the same dir
        file_params,evtfname,h,cra,cdec,expt
	;inarr=readfits(fname,inhead)
        fname=fdir+fname+ftail ;this file contains no info on exposure
	inhead=headfits(fname+strtrim(bv(0),2)+'.fits')
	map_exp,expt,inarr,bv=bv,fhead=fname
    endelse 
	cra=sxpar(inhead,'crval1')
	cdec=sxpar(inhead,'crval2')
	if n_elements(soufile) ne 0 then $
	inarr=source_sub_v(inarr,cra,cdec,sra,sdec,cntr,block=block $
	,fac=subfac,/deg,perc=asfrac,psffile=psffile) ;,cra=cra,cdec=cdec)
		;assuming the image center is the same as the axis
		;and the default block 
	if keyword_set(mtoi) then begin
		cast_r,mhdr,mmap,inhead,inarr,mtype=mtype $
	 ,offset=offset,nozero=nozero,append=append,avgkey=avgkey 
            endif else begin	
			if mtype eq 1 then gc=3
			cast,'',mhdr,outa=outa,inh=inhead,ina=inarr,gc=gc
			if append eq 1 then mmap=mmap+outa else mmap=outa
	endelse
	append=1
endwhile
free_lun,un
return
end
