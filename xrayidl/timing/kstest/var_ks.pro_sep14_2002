pro var_ks,ttref,lls,sn,nxp,nyp,rr,tlo,thi,vslist,noprint=noprint,sb=sb
;+
; Test the null hypothesis (no variation) for X-ray sources, using the KS 
; statistic and allowing background variation, which is assumed to be 
; the same as that in off-source region (ttref)
;
; ttref - presorted reference time series (background counts)
;	to be compared with.
; lls - count list presorted according to arrival time, if ttso is provided,
; 	lls will not be used.
; ttso, xxs, yys - arrival time, and pixel positions of counts
; nxp, nyp - event pixel positions of the sources
; rr - vector contains the radii (in pixels) from which counts are 
;	to be extracted from the list
; probth - probability threshold below which a source is to be marked as 
;		variable. Default probth=0.001350 ;3 sigma
; sfb - background counts per bin at each position of the sources
; block - bin size of the background map in units of pixels
; xc, yc - the image center pixel coordinates (defaults are given as !pref).
; probv - output vector contains the probablily for a source to be constant.
;
; written by wqd, 12/4/98
; see /data2/rpm81/memo_timing for an example
;
;-
 if ( N_params() LT 4 ) then begin
    print,'Syntax - var_ks,ttref,lls,xp,yp,rr,tlo,thi,probv'
    print,',probth=probth,sfb=sfb,block=block,xc=xc,yc=yc,xxs=xxs,yys=yys'
    return
 endif

;get the accumulated count distribution of the reference background region
ntint=n_elements(tlo)
ttr=ttref
nttr=n_elements(ttr)
ttr=[tlo(0),ttr,thi(ntint-1)]
normv=[findgen(nttr+1),nttr+1]/(nttr+1)

;get time, x, y of source counts: 
tts=lls.time 
xxs=lls.x
yys=lls.y

;remove gaps in both the source and reference count vectors:
if ntint gt 1 then begin 
 tgap=0d
 for k=1,ntint-1 do begin
	tgap=tgap+tlo(k)-thi(k-1)
	sel=where(tts ge tlo(k) and tts le thi(k),nsel)
	if nsel ne 0 then tts(sel)=tts(sel)-tgap
	sel=where(ttr ge tlo(k) and ttr le thi(k),nsel)
	if nsel ne 0 then ttr(sel)=ttr(sel)-tgap
 endfor
endif
;--------------------------------------------------
srr=rr^2
ttot=total(thi-tlo)
;--------------------------------------------------
; now let us do the KS test:
if n_elements(probth) eq 0 then probth=0.001350 ;3 sigma
print,'The assumed probability threshold is ',probth
ns=n_elements(nxp)
if n_elements(sb) eq 0 then sb=fltarr(ns)
nssv=intarr(ns)
probv=fltarr(ns)+1.
if not keyword_set(noprint) then $
 print,'Source No.,    sn,     net c,      bc,      dd,      prob    var flag'
for kk=0,ns-1 do begin
	;choose only those counts for this source:
	ss=where(((xxs-nxp(kk))^2+(yys-nyp(kk))^2) le srr(kk),nss)
 	if (nss-sb(kk) gt 10) then begin ;only sources with net counts greater
					 ; than 10 are considered
	ttss=tts(ss)
	linterp,ttr,normv,ttss,ff ;find the background function values at ttss
	ratio=sb(kk)/nss
	ff=ratio*ff+(1.-ratio)/ttot*(ttss-tlo(0))
	;the first part is due to background which varies according to ttr
	;the second part is due to the source assumed to be constant
	f0 = (findgen(nss)+1.)/nss
	dd=max(abs(f0-ff))
	prob_ks, dd, nss, prob
        if not keyword_set(noprint) then begin
		if prob lt probth then $
	  	 print,kk, sn(kk),nss-sb(kk), sb(kk), dd, prob, ' var' $
		 else print,kk, sn(kk),nss-sb(kk), sb(kk), dd,prob
	endif
	probv(kk)=prob
	nssv(kk)=nss
	endif
endfor
row={vprob:0.0,vsc:0,vbc:0.0}
vslist=replicate(row,ns)
vslist.vprob=probv 
vslist.vsc=nssv 
vslist.vbc=sb 
return
end
